# -*- coding: utf-8 -*-
"""Phishing URL Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Uq7EjVJ9uclUw2BofsokoEoA8jfsw1Gr

#**Phishing URL Detection Using Machine Learning**

**Ramika Nag**
**ENG20CY0034**
"""

import pandas as pd
import numpy as np

from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier

from sklearn import metrics
from sklearn.metrics import confusion_matrix
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.tree import export_graphviz

#Read and Split Dataset
df=pd.read_csv('/Training Dataset.arff')
print(df.head())

X = df.iloc[:, :-1]
y = df.iloc[:, -1]
Xtrain, Xtest, ytrain, ytest = train_test_split(X, y, random_state=0)
#Training the model

model = DecisionTreeClassifier()
model.fit(Xtrain, ytrain)

ypred = model.predict(Xtest)
print(metrics.classification_report(ypred, ytest))
print("\n\nAccuracy Score:", metrics.accuracy_score(ytest, ypred).round(2)*100, "%")
#Evaluating the model

mat = confusion_matrix(ytest, ypred)
sns.heatmap(mat.T, square=True, annot=True, fmt='d', cbar=False)
plt.xlabel('true label')
plt.ylabel('predicted label');
#Identify False Positives & False Negatives

dot_file = '/tree.dot'
export_graphviz(model,out_file=dot_file, feature_names=X.columns.values)

from IPython.display import Image
Image(filename='/graphviz.png')